/**
 * CSS styles that are specific to the filmstrip that shows the thumbnail tiles.
 */
.tile-view {
    /**
     * Add a border around the active speaker to make the thumbnail easier to
     * see.
     */
    .active-speaker {
        border: $thumbnailVideoBorder solid $videoThumbnailSelected;
        box-shadow: inset 0 0 3px $videoThumbnailSelected,
        0 0 3px $videoThumbnailSelected;
    }

    #filmstripRemoteVideos {
        box-sizing: border-box;
        height: 100vh;
        width: 100vw;
    }

    #remoteVideos {
        /**
         * Height is modified with an inline style in horizontal filmstrip mode
         * so !important is used to override that.
         */
        height: 100% !important;
        width: 100%;
    }

    .filmstrip {
        align-items: center;
        display: flex;
        height: 100%;
        justify-content: center;
        left: 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: $filmstripVideosZ
    }

    /**
     * Regardless of the user setting, do not let the filmstrip be in a hidden
     * state.
     */
    .filmstrip__videos.hidden {
        display: block;
    }

    #filmstripRemoteVideos {
        box-sizing: border-box;

        /**
         * Allow scrolling of the thumbnails.
         */
        overflow: auto;
    }

    /**
     * The size of the thumbnails should be set with javascript, based on
     * desired column count and window width. The rows are created using flex
     * and allowing the thumbnails to wrap.
     */
    #filmstripRemoteVideosContainer {
        align-content: baseline;
        box-sizing: border-box;
        display: flex;
        flex-wrap: wrap;
        height: 100vh;
        justify-content: center;
        padding: 100px 0;

        .videocontainer {
            box-sizing: border-box;
            display: block;
            margin: 0;
        }

        video {
            object-fit: contain;
        }
    }

    /**
     * Firefox flex acts a little differently. To make sure the bottom row
     * of thumbnails is not overlapped by the horizontal toolbar, margin is
     * added to the local thumbnail to keep it from the bottom of the screen.
     * It is assumed the local thumbnail will always be on the bottom row.
     */
    #localVideoContainer {
        margin-bottom: 100px !important;
    }

    /**
     * The following styles resize thumbnails to fit a tile/grid layout.
     * !important is used a lot because javascript resizing logic fires
     * for vertical and horizontal filmstrip to set inline thumbnail size
     * styling.
     */
    $videoThumbnailSelectors: "
         #filmstripRemoteVideos .videocontainer:not(#localVideoContainer),
         #localVideoTileViewContainer
    ";

    .col-1 {
        #{$videoThumbnailSelectors} {
            width: 100% !important;
        }
    }

    .col-2 {
        #{$videoThumbnailSelectors} {
            width: 50% !important;
        }
    }

    .col-3 {
        #{$videoThumbnailSelectors} {
            width: 33% !important;
        }
    }

    .col-4 {
        #{$videoThumbnailSelectors}{
            width: 25% !important;
        }
    }

    .col-5 {
        #{$videoThumbnailSelectors} {
            width: 20% !important;
        }
    }

    .row-1 {
        #{$videoThumbnailSelectors} {
            height: 100% !important;
            min-height: 100% !important;
        }
    }
    .row-2 {
        #{$videoThumbnailSelectors} {
            height: 50% !important;
            min-height: 50% !important;
        }
    }

    .row-3 {
        #{$videoThumbnailSelectors} {
            height: 33% !important;
            min-height: 50% !important;
        }
    }

    .row-4 {
        #{$videoThumbnailSelectors} {
            height: 25% !important;
            min-height: 25% !important;
        }
    }

    .row-5 {
        #{$videoThumbnailSelectors} {
            height: 20% !important;
            min-height: 20% !important;
        }
    }

    /**
     * The actual thumbnail for local video is already in a wrapper that has
     * its height and width set as needed for the tile layout. Local video
     * should try to fill the container's space. !important needs to be used
     * to sidestep inlines styling set by javascript for vertical and horizontal
     * filmstrip.
     */
    #filmstripRemoteVideosContainer .videocontainer#localVideoContainer {
        height: 100% !important;
        width: 100% !important;
    }
}
