name: Simple CI

on: [pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: Get branch names
      id: branch-name
      uses: tj-actions/branch-names@v6
    - name: Current branch name
      run: |
        echo "${{ steps.branch-name.outputs.current_branch }}"
    - name: Get Base Ref branch name (i.e The target of a pull request.)
      run: |
        echo "${{ steps.branch-name.outputs.base_ref_branch }}"
    - name: Get diff
      # run: $(git diff --name-only --diff-filter=ACMRTUXB origin/${{ steps.branch-name.outputs.current_branch }}..origin/${{ steps.branch-name.outputs.base_ref_branch }} | grep -E '(.ts$|.tsx$|.js$)')
      run: $(git diff --name-only --diff-filter=ACMRTUXB origin/${{ steps.branch-name.outputs.current_branch }}..origin/${{ steps.branch-name.outputs.base_ref_branch }})
    - run: npm install
    - name: Check git status
      run: git status
    - name: Normalize lang files to ensure sorted
      run: npm run lang-sort
    - name: Check if the git repository is clean
      run: $(exit $(git status --porcelain --untracked-files=no | head -255 | wc -l)) || (echo "Dirty git tree"; git diff; exit 1)
    - run: npm run lint
    - run: for file in lang/*.json; do npx --yes jsonlint -q $file || exit 1; done
  linux-build:
    name: Build Frontend (Linux)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - run: npm install
    - run: make
  macos-ci:
    name: Build Frontend (macOS)
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - run: npm install
    - run: make
